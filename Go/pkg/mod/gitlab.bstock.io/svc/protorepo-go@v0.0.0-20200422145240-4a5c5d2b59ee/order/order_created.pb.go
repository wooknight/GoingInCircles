// This message is used to notify after an order has been created.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: order_created.proto

package order

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OrderCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteAbb         string               `protobuf:"bytes,1,opt,name=site_abb,json=siteAbb,proto3" json:"site_abb,omitempty"`
	OrderId         int32                `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ComposedOrderId string               `protobuf:"bytes,3,opt,name=composed_order_id,json=composedOrderId,proto3" json:"composed_order_id,omitempty"` // combines site_abb + order_id
	Status          string               `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                            // current updated status
	StatusId        int32                `protobuf:"varint,5,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`                       // current updated status id
	CreatedAt       *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                     // order created at datetime
	WinningAmount   float64              `protobuf:"fixed64,7,opt,name=winning_amount,json=winningAmount,proto3" json:"winning_amount,omitempty"`       // buyer winning amount
	CurrencyCode    string               `protobuf:"bytes,8,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`            // currency code
	Buyer           *Buyer               `protobuf:"bytes,9,opt,name=buyer,proto3" json:"buyer,omitempty"`
	Product         *Product             `protobuf:"bytes,10,opt,name=product,proto3" json:"product,omitempty"`
	Auction         *Auction             `protobuf:"bytes,11,opt,name=auction,proto3" json:"auction,omitempty"`
	Bid             *Bid                 `protobuf:"bytes,12,opt,name=bid,proto3" json:"bid,omitempty"`
	Seller          *Seller              `protobuf:"bytes,13,opt,name=seller,proto3" json:"seller,omitempty"`
	Shipping        *Shipping            `protobuf:"bytes,14,opt,name=shipping,proto3" json:"shipping,omitempty"`
	Taxes           []*Tax               `protobuf:"bytes,15,rep,name=taxes,proto3" json:"taxes,omitempty"`
	Links           []*Link              `protobuf:"bytes,50,rep,name=links,proto3" json:"links,omitempty"`
	EventType       string               `protobuf:"bytes,51,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
}

func (x *OrderCreated) Reset() {
	*x = OrderCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_created_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreated) ProtoMessage() {}

func (x *OrderCreated) ProtoReflect() protoreflect.Message {
	mi := &file_order_created_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreated.ProtoReflect.Descriptor instead.
func (*OrderCreated) Descriptor() ([]byte, []int) {
	return file_order_created_proto_rawDescGZIP(), []int{0}
}

func (x *OrderCreated) GetSiteAbb() string {
	if x != nil {
		return x.SiteAbb
	}
	return ""
}

func (x *OrderCreated) GetOrderId() int32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderCreated) GetComposedOrderId() string {
	if x != nil {
		return x.ComposedOrderId
	}
	return ""
}

func (x *OrderCreated) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderCreated) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *OrderCreated) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OrderCreated) GetWinningAmount() float64 {
	if x != nil {
		return x.WinningAmount
	}
	return 0
}

func (x *OrderCreated) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *OrderCreated) GetBuyer() *Buyer {
	if x != nil {
		return x.Buyer
	}
	return nil
}

func (x *OrderCreated) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *OrderCreated) GetAuction() *Auction {
	if x != nil {
		return x.Auction
	}
	return nil
}

func (x *OrderCreated) GetBid() *Bid {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *OrderCreated) GetSeller() *Seller {
	if x != nil {
		return x.Seller
	}
	return nil
}

func (x *OrderCreated) GetShipping() *Shipping {
	if x != nil {
		return x.Shipping
	}
	return nil
}

func (x *OrderCreated) GetTaxes() []*Tax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *OrderCreated) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *OrderCreated) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sku                   string               `protobuf:"bytes,2,opt,name=sku,proto3" json:"sku,omitempty"`
	Name                  string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Dimensions            *Dimensions          `protobuf:"bytes,6,opt,name=dimensions,proto3" json:"dimensions,omitempty"`
	Volume                float64              `protobuf:"fixed64,7,opt,name=volume,proto3" json:"volume,omitempty"`
	TruckCount            int32                `protobuf:"varint,8,opt,name=truck_count,json=truckCount,proto3" json:"truck_count,omitempty"`
	IsRefrigerated        bool                 `protobuf:"varint,9,opt,name=is_refrigerated,json=isRefrigerated,proto3" json:"is_refrigerated,omitempty"`
	PieceCount            int32                `protobuf:"varint,10,opt,name=piece_count,json=pieceCount,proto3" json:"piece_count,omitempty"`
	PackageType           string               `protobuf:"bytes,11,opt,name=package_type,json=packageType,proto3" json:"package_type,omitempty"`
	ServiceType           string               `protobuf:"bytes,12,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ShippingType          int32                `protobuf:"varint,13,opt,name=shipping_type,json=shippingType,proto3" json:"shipping_type,omitempty"`
	ShippingFixedCost     float64              `protobuf:"fixed64,14,opt,name=shipping_fixed_cost,json=shippingFixedCost,proto3" json:"shipping_fixed_cost,omitempty"`
	Condition             int32                `protobuf:"varint,15,opt,name=condition,proto3" json:"condition,omitempty"`
	SellerZipCode         string               `protobuf:"bytes,16,opt,name=seller_zip_code,json=sellerZipCode,proto3" json:"seller_zip_code,omitempty"`
	Units                 int32                `protobuf:"varint,17,opt,name=units,proto3" json:"units,omitempty"`
	ManifestUrl           string               `protobuf:"bytes,18,opt,name=manifest_url,json=manifestUrl,proto3" json:"manifest_url,omitempty"`
	PalletIds             []string             `protobuf:"bytes,19,rep,name=pallet_ids,json=palletIds,proto3" json:"pallet_ids,omitempty"`
	InventoryReferenceIds []string             `protobuf:"bytes,20,rep,name=inventory_reference_ids,json=inventoryReferenceIds,proto3" json:"inventory_reference_ids,omitempty"`
	Price                 float64              `protobuf:"fixed64,21,opt,name=price,proto3" json:"price,omitempty"`
	Cost                  float64              `protobuf:"fixed64,22,opt,name=cost,proto3" json:"cost,omitempty"`
	RetailPrice           float64              `protobuf:"fixed64,23,opt,name=retail_price,json=retailPrice,proto3" json:"retail_price,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_created_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_order_created_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_order_created_proto_rawDescGZIP(), []int{1}
}

func (x *Product) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Product) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Product) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Product) GetDimensions() *Dimensions {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *Product) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Product) GetTruckCount() int32 {
	if x != nil {
		return x.TruckCount
	}
	return 0
}

func (x *Product) GetIsRefrigerated() bool {
	if x != nil {
		return x.IsRefrigerated
	}
	return false
}

func (x *Product) GetPieceCount() int32 {
	if x != nil {
		return x.PieceCount
	}
	return 0
}

func (x *Product) GetPackageType() string {
	if x != nil {
		return x.PackageType
	}
	return ""
}

func (x *Product) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *Product) GetShippingType() int32 {
	if x != nil {
		return x.ShippingType
	}
	return 0
}

func (x *Product) GetShippingFixedCost() float64 {
	if x != nil {
		return x.ShippingFixedCost
	}
	return 0
}

func (x *Product) GetCondition() int32 {
	if x != nil {
		return x.Condition
	}
	return 0
}

func (x *Product) GetSellerZipCode() string {
	if x != nil {
		return x.SellerZipCode
	}
	return ""
}

func (x *Product) GetUnits() int32 {
	if x != nil {
		return x.Units
	}
	return 0
}

func (x *Product) GetManifestUrl() string {
	if x != nil {
		return x.ManifestUrl
	}
	return ""
}

func (x *Product) GetPalletIds() []string {
	if x != nil {
		return x.PalletIds
	}
	return nil
}

func (x *Product) GetInventoryReferenceIds() []string {
	if x != nil {
		return x.InventoryReferenceIds
	}
	return nil
}

func (x *Product) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Product) GetRetailPrice() float64 {
	if x != nil {
		return x.RetailPrice
	}
	return 0
}

type Dimensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length float64 `protobuf:"fixed64,1,opt,name=length,proto3" json:"length,omitempty"`
	Width  float64 `protobuf:"fixed64,2,opt,name=width,proto3" json:"width,omitempty"`
	Height float64 `protobuf:"fixed64,3,opt,name=height,proto3" json:"height,omitempty"`
	Weight float64 `protobuf:"fixed64,4,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Dimensions) Reset() {
	*x = Dimensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_created_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimensions) ProtoMessage() {}

func (x *Dimensions) ProtoReflect() protoreflect.Message {
	mi := &file_order_created_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimensions.ProtoReflect.Descriptor instead.
func (*Dimensions) Descriptor() ([]byte, []int) {
	return file_order_created_proto_rawDescGZIP(), []int{2}
}

func (x *Dimensions) GetLength() float64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Dimensions) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Dimensions) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Dimensions) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Auction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt       *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	StartPrice      float64              `protobuf:"fixed64,4,opt,name=start_price,json=startPrice,proto3" json:"start_price,omitempty"`
	FinalPrice      float64              `protobuf:"fixed64,5,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`
	CurrentBidAmt   float64              `protobuf:"fixed64,6,opt,name=current_bid_amt,json=currentBidAmt,proto3" json:"current_bid_amt,omitempty"`
	NumberBids      int32                `protobuf:"varint,7,opt,name=number_bids,json=numberBids,proto3" json:"number_bids,omitempty"`
	StartTime       *timestamp.Timestamp `protobuf:"bytes,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	InitialEndTime  *timestamp.Timestamp `protobuf:"bytes,9,opt,name=initial_end_time,json=initialEndTime,proto3" json:"initial_end_time,omitempty"`
	EndTime         *timestamp.Timestamp `protobuf:"bytes,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Description     string               `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	Name            string               `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	ParentAuctionId int32                `protobuf:"varint,13,opt,name=parent_auction_id,json=parentAuctionId,proto3" json:"parent_auction_id,omitempty"`
}

func (x *Auction) Reset() {
	*x = Auction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_created_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auction) ProtoMessage() {}

func (x *Auction) ProtoReflect() protoreflect.Message {
	mi := &file_order_created_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auction.ProtoReflect.Descriptor instead.
func (*Auction) Descriptor() ([]byte, []int) {
	return file_order_created_proto_rawDescGZIP(), []int{3}
}

func (x *Auction) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Auction) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Auction) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Auction) GetStartPrice() float64 {
	if x != nil {
		return x.StartPrice
	}
	return 0
}

func (x *Auction) GetFinalPrice() float64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *Auction) GetCurrentBidAmt() float64 {
	if x != nil {
		return x.CurrentBidAmt
	}
	return 0
}

func (x *Auction) GetNumberBids() int32 {
	if x != nil {
		return x.NumberBids
	}
	return 0
}

func (x *Auction) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Auction) GetInitialEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.InitialEndTime
	}
	return nil
}

func (x *Auction) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Auction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Auction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Auction) GetParentAuctionId() int32 {
	if x != nil {
		return x.ParentAuctionId
	}
	return 0
}

type Bid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedVia    string               `protobuf:"bytes,4,opt,name=created_via,json=createdVia,proto3" json:"created_via,omitempty"`
	BidAmt        float64              `protobuf:"fixed64,5,opt,name=bid_amt,json=bidAmt,proto3" json:"bid_amt,omitempty"`
	CurrentBidAmt float64              `protobuf:"fixed64,6,opt,name=current_bid_amt,json=currentBidAmt,proto3" json:"current_bid_amt,omitempty"`
	Status        int32                `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	IsAbsolute    bool                 `protobuf:"varint,8,opt,name=is_absolute,json=isAbsolute,proto3" json:"is_absolute,omitempty"`
	IsCancelled   bool                 `protobuf:"varint,9,opt,name=is_cancelled,json=isCancelled,proto3" json:"is_cancelled,omitempty"`
	IsProcessed   bool                 `protobuf:"varint,10,opt,name=is_processed,json=isProcessed,proto3" json:"is_processed,omitempty"`
	CustomerIp    string               `protobuf:"bytes,11,opt,name=customer_ip,json=customerIp,proto3" json:"customer_ip,omitempty"`
	AddressId     int32                `protobuf:"varint,12,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
}

func (x *Bid) Reset() {
	*x = Bid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_created_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bid) ProtoMessage() {}

func (x *Bid) ProtoReflect() protoreflect.Message {
	mi := &file_order_created_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bid.ProtoReflect.Descriptor instead.
func (*Bid) Descriptor() ([]byte, []int) {
	return file_order_created_proto_rawDescGZIP(), []int{4}
}

func (x *Bid) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Bid) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Bid) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Bid) GetCreatedVia() string {
	if x != nil {
		return x.CreatedVia
	}
	return ""
}

func (x *Bid) GetBidAmt() float64 {
	if x != nil {
		return x.BidAmt
	}
	return 0
}

func (x *Bid) GetCurrentBidAmt() float64 {
	if x != nil {
		return x.CurrentBidAmt
	}
	return 0
}

func (x *Bid) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Bid) GetIsAbsolute() bool {
	if x != nil {
		return x.IsAbsolute
	}
	return false
}

func (x *Bid) GetIsCancelled() bool {
	if x != nil {
		return x.IsCancelled
	}
	return false
}

func (x *Bid) GetIsProcessed() bool {
	if x != nil {
		return x.IsProcessed
	}
	return false
}

func (x *Bid) GetCustomerIp() string {
	if x != nil {
		return x.CustomerIp
	}
	return ""
}

func (x *Bid) GetAddressId() int32 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

type Seller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email   string         `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Address *SellerAddress `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Seller) Reset() {
	*x = Seller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_created_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seller) ProtoMessage() {}

func (x *Seller) ProtoReflect() protoreflect.Message {
	mi := &file_order_created_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seller.ProtoReflect.Descriptor instead.
func (*Seller) Descriptor() ([]byte, []int) {
	return file_order_created_proto_rawDescGZIP(), []int{5}
}

func (x *Seller) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Seller) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Seller) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Seller) GetAddress() *SellerAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type SellerAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LocationContacts string `protobuf:"bytes,2,opt,name=location_contacts,json=locationContacts,proto3" json:"location_contacts,omitempty"`
	Address1         string `protobuf:"bytes,3,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2         string `protobuf:"bytes,4,opt,name=address2,proto3" json:"address2,omitempty"`
	Address3         string `protobuf:"bytes,5,opt,name=address3,proto3" json:"address3,omitempty"`
	City             string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Region           string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	ZipPostalCode    string `protobuf:"bytes,8,opt,name=zip_postal_code,json=zipPostalCode,proto3" json:"zip_postal_code,omitempty"`
	Country          string `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
	Phone            string `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	Fax              string `protobuf:"bytes,11,opt,name=fax,proto3" json:"fax,omitempty"`
	PrimaryCell      string `protobuf:"bytes,12,opt,name=primary_cell,json=primaryCell,proto3" json:"primary_cell,omitempty"`
	PrimaryEmail     string `protobuf:"bytes,13,opt,name=primary_email,json=primaryEmail,proto3" json:"primary_email,omitempty"`
}

func (x *SellerAddress) Reset() {
	*x = SellerAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_created_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellerAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellerAddress) ProtoMessage() {}

func (x *SellerAddress) ProtoReflect() protoreflect.Message {
	mi := &file_order_created_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellerAddress.ProtoReflect.Descriptor instead.
func (*SellerAddress) Descriptor() ([]byte, []int) {
	return file_order_created_proto_rawDescGZIP(), []int{6}
}

func (x *SellerAddress) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SellerAddress) GetLocationContacts() string {
	if x != nil {
		return x.LocationContacts
	}
	return ""
}

func (x *SellerAddress) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *SellerAddress) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *SellerAddress) GetAddress3() string {
	if x != nil {
		return x.Address3
	}
	return ""
}

func (x *SellerAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SellerAddress) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SellerAddress) GetZipPostalCode() string {
	if x != nil {
		return x.ZipPostalCode
	}
	return ""
}

func (x *SellerAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SellerAddress) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SellerAddress) GetFax() string {
	if x != nil {
		return x.Fax
	}
	return ""
}

func (x *SellerAddress) GetPrimaryCell() string {
	if x != nil {
		return x.PrimaryCell
	}
	return ""
}

func (x *SellerAddress) GetPrimaryEmail() string {
	if x != nil {
		return x.PrimaryEmail
	}
	return ""
}

type Shipping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *ShippingAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Charge  float64          `protobuf:"fixed64,2,opt,name=charge,proto3" json:"charge,omitempty"`
	TypeId  int32            `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
}

func (x *Shipping) Reset() {
	*x = Shipping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_created_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shipping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shipping) ProtoMessage() {}

func (x *Shipping) ProtoReflect() protoreflect.Message {
	mi := &file_order_created_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shipping.ProtoReflect.Descriptor instead.
func (*Shipping) Descriptor() ([]byte, []int) {
	return file_order_created_proto_rawDescGZIP(), []int{7}
}

func (x *Shipping) GetAddress() *ShippingAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Shipping) GetCharge() float64 {
	if x != nil {
		return x.Charge
	}
	return 0
}

func (x *Shipping) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

type ShippingAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteAddressId int32  `protobuf:"varint,1,opt,name=site_address_id,json=siteAddressId,proto3" json:"site_address_id,omitempty"`
	FirstName     string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Company       string `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	Street        string `protobuf:"bytes,5,opt,name=street,proto3" json:"street,omitempty"`
	City          string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Region        string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	Postcode      string `protobuf:"bytes,8,opt,name=postcode,proto3" json:"postcode,omitempty"`
	CountryCode   string `protobuf:"bytes,9,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Telephone     string `protobuf:"bytes,10,opt,name=telephone,proto3" json:"telephone,omitempty"`
	Fax           string `protobuf:"bytes,11,opt,name=fax,proto3" json:"fax,omitempty"`
}

func (x *ShippingAddress) Reset() {
	*x = ShippingAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_created_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingAddress) ProtoMessage() {}

func (x *ShippingAddress) ProtoReflect() protoreflect.Message {
	mi := &file_order_created_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingAddress.ProtoReflect.Descriptor instead.
func (*ShippingAddress) Descriptor() ([]byte, []int) {
	return file_order_created_proto_rawDescGZIP(), []int{8}
}

func (x *ShippingAddress) GetSiteAddressId() int32 {
	if x != nil {
		return x.SiteAddressId
	}
	return 0
}

func (x *ShippingAddress) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ShippingAddress) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ShippingAddress) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *ShippingAddress) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *ShippingAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ShippingAddress) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ShippingAddress) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *ShippingAddress) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *ShippingAddress) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *ShippingAddress) GetFax() string {
	if x != nil {
		return x.Fax
	}
	return ""
}

type Tax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Percentag float64 `protobuf:"fixed64,2,opt,name=percentag,proto3" json:"percentag,omitempty"`
	Amount    float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Tax) Reset() {
	*x = Tax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_created_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tax) ProtoMessage() {}

func (x *Tax) ProtoReflect() protoreflect.Message {
	mi := &file_order_created_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tax.ProtoReflect.Descriptor instead.
func (*Tax) Descriptor() ([]byte, []int) {
	return file_order_created_proto_rawDescGZIP(), []int{9}
}

func (x *Tax) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Tax) GetPercentag() float64 {
	if x != nil {
		return x.Percentag
	}
	return 0
}

func (x *Tax) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_order_created_proto protoreflect.FileDescriptor

var file_order_created_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75,
	0x74, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x04, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x61, 0x62, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x41,
	0x62, 0x62, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x75, 0x79, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x79,
	0x65, 0x72, 0x52, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x03, 0x62, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x20, 0x0a, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x74, 0x61, 0x78, 0x52, 0x05, 0x74, 0x61, 0x78, 0x65,
	0x73, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xa9, 0x06, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x75, 0x63, 0x6b, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x72, 0x75, 0x63,
	0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x66,
	0x72, 0x69, 0x67, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x69, 0x73, 0x52, 0x65, 0x66, 0x72, 0x69, 0x67, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x69, 0x65, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x46, 0x69, 0x78, 0x65, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x5f, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x6a,
	0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xb4, 0x04, 0x0a, 0x07, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x5f, 0x61, 0x6d,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x42, 0x69, 0x64, 0x41, 0x6d, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x62, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x69, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xac, 0x03, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x56, 0x69, 0x61,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x62, 0x69, 0x64, 0x41, 0x6d, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x64, 0x41, 0x6d,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x22, 0x73, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xff, 0x02, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x31, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x7a, 0x69, 0x70, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x7a, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x61, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x61, 0x78, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x65,
	0x6c, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x6e, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0xc3, 0x02, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x69, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x61, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x61, 0x78, 0x22, 0x4f, 0x0a,
	0x03, 0x74, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_order_created_proto_rawDescOnce sync.Once
	file_order_created_proto_rawDescData = file_order_created_proto_rawDesc
)

func file_order_created_proto_rawDescGZIP() []byte {
	file_order_created_proto_rawDescOnce.Do(func() {
		file_order_created_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_created_proto_rawDescData)
	})
	return file_order_created_proto_rawDescData
}

var file_order_created_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_order_created_proto_goTypes = []interface{}{
	(*OrderCreated)(nil),        // 0: order.OrderCreated
	(*Product)(nil),             // 1: order.product
	(*Dimensions)(nil),          // 2: order.dimensions
	(*Auction)(nil),             // 3: order.auction
	(*Bid)(nil),                 // 4: order.bid
	(*Seller)(nil),              // 5: order.seller
	(*SellerAddress)(nil),       // 6: order.seller_address
	(*Shipping)(nil),            // 7: order.shipping
	(*ShippingAddress)(nil),     // 8: order.shipping_address
	(*Tax)(nil),                 // 9: order.tax
	(*timestamp.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*Buyer)(nil),               // 11: buyer.Buyer
	(*Link)(nil),                // 12: util.Link
}
var file_order_created_proto_depIdxs = []int32{
	10, // 0: order.OrderCreated.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: order.OrderCreated.buyer:type_name -> buyer.Buyer
	1,  // 2: order.OrderCreated.product:type_name -> order.product
	3,  // 3: order.OrderCreated.auction:type_name -> order.auction
	4,  // 4: order.OrderCreated.bid:type_name -> order.bid
	5,  // 5: order.OrderCreated.seller:type_name -> order.seller
	7,  // 6: order.OrderCreated.shipping:type_name -> order.shipping
	9,  // 7: order.OrderCreated.taxes:type_name -> order.tax
	12, // 8: order.OrderCreated.links:type_name -> util.Link
	10, // 9: order.product.created_at:type_name -> google.protobuf.Timestamp
	10, // 10: order.product.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 11: order.product.dimensions:type_name -> order.dimensions
	10, // 12: order.auction.created_at:type_name -> google.protobuf.Timestamp
	10, // 13: order.auction.updated_at:type_name -> google.protobuf.Timestamp
	10, // 14: order.auction.start_time:type_name -> google.protobuf.Timestamp
	10, // 15: order.auction.initial_end_time:type_name -> google.protobuf.Timestamp
	10, // 16: order.auction.end_time:type_name -> google.protobuf.Timestamp
	10, // 17: order.bid.created_at:type_name -> google.protobuf.Timestamp
	10, // 18: order.bid.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 19: order.seller.address:type_name -> order.seller_address
	8,  // 20: order.shipping.address:type_name -> order.shipping_address
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_order_created_proto_init() }
func file_order_created_proto_init() {
	if File_order_created_proto != nil {
		return
	}
	file_util_proto_init()
	file_buyer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_order_created_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_created_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_created_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_created_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_created_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_created_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Seller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_created_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellerAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_created_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shipping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_created_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_created_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_created_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_order_created_proto_goTypes,
		DependencyIndexes: file_order_created_proto_depIdxs,
		MessageInfos:      file_order_created_proto_msgTypes,
	}.Build()
	File_order_created_proto = out.File
	file_order_created_proto_rawDesc = nil
	file_order_created_proto_goTypes = nil
	file_order_created_proto_depIdxs = nil
}
